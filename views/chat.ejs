<script>

    const msgInput = document.getElementById("chat-msg-input");
    const sendMsgBtn = document.getElementById("chat-msg-enviar-btn")
    const chatConversa = document.getElementById("chat-conversa-conteudo-msgs");
    const chatContatoCard = document.getElementById("chat-contatos-cards");
    const chatAuthorName = document.getElementById("chat-author-name");
    const chatAuthorImg = document.getElementById("chat-author-img");
    let enterPressedCallBack;

    msgInput.addEventListener("input", () => {
        msgInput.value = msgInput.value.replace(/[^a-zA-ZÀ-ÿ0-9.,;!?()'" -]/g, "").slice(0, 500);
    });

    async function sendMsg(msg, chatId) {
        try {
            const response = await socket.timeout(10000).emitWithAck("send message", msg, chatId);
            return response;
        } catch (error) {

            throw error;
        }

    }

    function renderMsg(msg) {
        const msgContainer = document.createElement("div")

        console.log(msg.sender)

        if (msg.sender._id == user._id)
            msgContainer.className = "chat-conversa-im-sending"
        else
            msgContainer.className = "chat-conversa-im-receiving"

        msgContainer.innerHTML = String.raw`
            <div>${msg.content}</div>
        `;

        return msgContainer
    }

    function renderChatContact(chat) {
        const contactContainer = document.createElement("div");
        contactContainer.className = "chat-contato-item";

        const contactImg = document.createElement("img");
        contactImg.src = "/" + chat.otherUser.profile_img;

        const contactText = document.createElement("p")
        contactText.className = "chat-contato-item-text";
        contactText.innerHTML = String.raw`
            <span class="chat-contato-item-author">
                       #${chat.otherUser.username}
            </span>
             

        `
        const contactTime = document.createElement("div");
        contactTime.className = "chat-contato-item-time";
        // contactTime.innerHTML = "agora"

        contactContainer.append(contactImg, contactText, contactTime);

        contactContainer.onclick = () => {
            location.replace("/chat/" + chat._id);

        }

        return contactContainer;
    }

    var user;

    authFetchJson("/user/get", "GET").then((response) => {
        console.log(response.status);
        if ((response.status == 401 || response.status == 403)) {
            window.location.replace("/login");
        } else {
            console.log(response);
            response.json().then((data) => {
                user = data.user;
                const params = location.href.split("/")

                if (data.user.verified == true) {
                    if (!data.user.username) {
                        window.location.replace("/etapa-perfil");
                    }
                } else {
                    window.location.replace("/verificacao-email")
                }


                document.getElementById("goToProject").addEventListener("click", () => {

                    let temProjeto = false;

                    fetch("/project/getAll")
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Erro ao buscar os projetos: ' + response.statusText);
                            }
                            return response.json();
                        }).then(projects => {

                            projects.forEach(pj => {
                                if (pj.owner._id == data.user._id) {
                                    temProjeto = true;
                                }
                            });

                            console.log(projects, temProjeto);

                            projects.forEach(pj => {
                                pj.team_members.forEach((member) => {
                                    if (member._id == data.user._id) {
                                        temProjeto = true;
                                    }
                                })
                            })

                            if (temProjeto) {
                                window.location.href = "/projetos-post-na-home"
                            } else {
                                window.location.href = "/sem-projetos"
                            }

                        })

                })



                console.log(params.length, location.href, params[4])
                const currentChatId = params[params.length - 1];

                socket.on("socket ready", async () => {
                    const response = await socket.timeout(10000).emitWithAck("get chats");
                    console.log(response);
                    chatConversa.innerHTML = "";
                    chatContatoCard.innerHTML = "";

                    for (let chat of response) {
                        chat.otherUser = chat.user._id == user._id ? chat.user2 : chat.user
                        chatContatoCard.appendChild(renderChatContact(chat));
                    }

                    document.getElementById("chat-contato-pesquisa-input").addEventListener("input", (e) => {
                        chatContatoCard.innerHTML = "";
                        const filterResponse = response.filter((chat) =>
                            chat.otherUser.username.includes(e.target.value)
                        )
                        for (let chat of filterResponse) {
                            chatContatoCard.appendChild(renderChatContact(chat));
                        }
                    })



                    const currentChat = response.filter(chat => chat._id == currentChatId)[0];
                    console.log("Current Chat", currentChat)
                    if (currentChat != null) {
                        chatAuthorImg.setAttribute("src", "/" + currentChat.otherUser.profile_img);
                        chatAuthorName.innerText = "#" + currentChat.otherUser.username;
                        for (let msg of currentChat.messages) {
                            chatConversa.appendChild(renderMsg(msg));
                        }
                        chatConversa.children[chatConversa.children.length - 1]?.scrollIntoView();



                        sendMsgBtn.onclick = () => {
                            if (msgInput.value.trim() != "") {
                                sendMsg(msgInput.value, currentChat._id);
                                const msgDiv = renderMsg({ sender: user, content: msgInput.value })
                                chatConversa.appendChild(msgDiv);
                                msgDiv.scrollIntoView();
                                msgInput.value = "";
                            }
                        }

                        if (enterPressedCallBack != null) {
                            msgInput.removeEventListener("keydown", enterPressedCallBack);
                        }

                        enterPressedCallBack = (e) => {
                            if (e.key == "Enter") {
                                e.preventDefault();
                                sendMsgBtn.onclick();
                            }
                        };

                        msgInput.addEventListener("keydown", enterPressedCallBack);

                        socket.on("new message", (msg, chatId) => {
                            if (currentChat._id == chatId) {
                                const msgDiv = renderMsg(msg);
                                chatConversa.appendChild(msgDiv);
                                msgDiv.scrollIntoView();
                            }
                        })

                    } else {
                        document.getElementById("chat-conversa").innerHTML = `
                        <div id="msg-sem-conversa">
                          <img src="/assets/logo-azul-incentiva.png" alt="" srcset="">
                               <h2>Mande mensagens para pessoas. </h2>
                         </div>`
                    }


                    socket.on("new message", (msg, projectId) => {
                        console.log("Nova mensagem", msg, projectId);
                    })
                })


            })
        }
    })



</script>

<link rel="stylesheet" href="/styles/chat.css">
<link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />

<div id="chat">

    <aside id="chat-aside-bar">

        <img src="/assets/incentiva-branca-logo.png">
        <nav id="chat-nav-itens">
            <div id="chat-incons-itens">
                <div class="chat-aside-nav-item">
                    <span class="material-symbols-outlined">
                        home
                    </span>
                    <a onclick=" window.location.href = '/home'">Home</a>
                </div>
                <div class="chat-aside-nav-item" id="goToProject">
                    <span class="material-symbols-outlined">
                        file_copy
                    </span>
                    <a>Projetos</a>
                </div>
                <div class="chat-aside-nav-item">
                    <span class="material-symbols-outlined">
                        chat
                    </span>
                    <a onclick=" window.location.href = '/chat'">Mensagens</a>
                </div>
            </div>
            <button id="chat-desconectar-btn">Desconectar <span class="material-symbols-outlined">
                    logout
                </span> </button>
        </nav>

    </aside>

    <div id="chat-fill-space">

    </div>



    <div id="chat-contatos-bar">
        <div id="chat-contatos-pesquisa">
            <h2>Pesquisar Conversa</h2>
            <div id="chat-pesquisa-input-customizado">
                <div id="chat-pesquisa-input-left-thing">
                    #
                </div>
                <input type="text" id="chat-contato-pesquisa-input">
            </div>
        </div>

        <div id="chat-contatos-cards">
            <div class="chat-contato-item">
                <img src="/assets/gray-cir.png">
                <p class="chat-contato-item-text">
                    <span class="chat-contato-item-author">
                        <!-- Hierro: -->
                    </span>
                    <!-- Lorem ipsum, dolor sit amet consectetur elit... -->
                </p>
                <div class="chat-contato-item-time">
                    <!-- agora -->

                </div>
            </div>


        </div>
    </div>

    <div id="chat-conversa">
        <div id="chat-conversa-author">
            <div id="chat-conversa-author-content">
                <img src="/assets/gray-cir.png" id="chat-author-img">
                <h2 id="chat-author-name">
                    <!-- #hierro_malandrade -->

                </h2>
            </div>
        </div>
        <div id="chat-conversa-conteudo">
            <div id="chat-scroll">
                <div id="chat-conversa-conteudo-msgs">


                    <!-- 
                    <div class="chat-conversa-im-receiving">
                        <div>

                        </div>
                    </div>

                    <div class="chat-conversa-im-sending">
                        <div>

                        </div>
                    </div> -->

                </div>
            </div>
        </div>
        <div id="chat-conversa-enviar-msg">
            <div id="chat-conversa-enviar-msg-customized">
                <input type="text" id="chat-msg-input" placeholder="Mensagem" autocomplete="off">
                <button id="chat-msg-enviar-btn">
                    <span class="material-symbols-outlined">
                        send
                    </span>
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById("chat-desconectar-btn").addEventListener("click", (e) => {
        if (confirm("Tem certeza que deseja desconectar?")) {
            localStorage.removeItem("token");
            window.location.replace("/login");
        }

    })


    document.getElementById("chat-msg-input").addEventListener("keydown", (e) => {
        if (e.key === "Enter") {
            e.preventDefault();



        }
    });

</script>